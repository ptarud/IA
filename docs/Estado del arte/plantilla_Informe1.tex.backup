\documentclass[letter, 10pt]{article}
\usepackage[latin1]{inputenc}
\usepackage[spanish]{babel}
\usepackage{amsfonts}
\usepackage{amsmath}
\usepackage{graphicx}
\usepackage{url}
\usepackage[top=3cm,bottom=3cm,left=3.5cm,right=3.5cm,footskip=1.5cm,headheight=1.5cm,headsep=.5cm,textheight=3cm]{geometry}
\usepackage{enumerate}

\begin{document}
\title{Inteligencia Artificial \\ \begin{Large}Estado del Arte: Problema Time Relaxed Traveling Tournament Problem (TRTTP)\end{Large}}
\author{Paulo Tarud C. 2523034-5.}
\date{\today}
\maketitle


%--------------------No borrar esta sección--------------------------------%
\section*{Evaluación}

\begin{tabular}{ll}
Resumen (5\%): & \underline{\hspace{2cm}} \\
Introducción (5\%):  & \underline{\hspace{2cm}} \\
Definición del Problema (10\%):  & \underline{\hspace{2cm}} \\
Estado del Arte (35\%):  & \underline{\hspace{2cm}} \\
Modelo Matemático (20\%): &  \underline{\hspace{2cm}}\\
Conclusiones (20\%): &  \underline{\hspace{2cm}}\\
Bibliografía (5\%): & \underline{\hspace{2cm}}\\
 &  \\
\textbf{Nota Final (100)}:   & \underline{\hspace{2cm}}
\end{tabular}
%---------------------------------------------------------------------------%

\begin{abstract}
%Resumen del informe en no más de 10 líneas.
En este trabajo, se estudiará el Traveling Tournament Problem (TTP), para luego analizar el nuevo problema Time Relaxed Tournament Problem (TRTTP). Además de ésto se verá
lo que se ha hecho hasta ahora, los mejores resultados y qué técnicas se usaron para resolver dichos problemas.

\end{abstract}

\section{Introducción} %%TEEEEEEEERMIIIIIIIIINAAAAAAAAARLAAAA%
%Una explicación breve de lo que consiste el informe. Introducción al problema que se estudiará, motivación.
En muchos países, los deportes proveen muchos ingresos además de entretenimiento. Maximizar los ingresos de una liga deportiva es el interés mas grande, no sólo para
los equipos, si no también para las comunidades locales. Hay muchos factores que afectan los ingresos de las ligas deportivas, uno de éstos es la programación horaria. \\

La mayor parte de las ligas profesionales dejan que las oficinas de administración central hagan la programación. Hay algunas características importantes de una programación. 
La más importante es la estructura. Actualmente la mayoría de las ligas usan un formato de programación de \emph{torneos round robin}, lo cual significa que cada equipo jugará un número 
definido de veces en un período de tiempo denominado ronda. La programación de \emph{torneos round robin} puede ser dividido en dos tipos, \emph{programación con tiempo restringido} y
\emph{programación con tiempo relajado}. En las primeras, el número de rondas disponibles es igual al número de rondas necesarias. Éste tipo de programación es usado en muchas ligas,
en la mayoría de los torneos universitarios de balóncesto, en ligas profesionales de fútbol en Europa y Sudamérica. En las segundas, el número de rondas disponibles es mayor que el número de rondas
necesarias. Éste último tipo de programación es usado en algunas ligas, en la asociación nacional de baloncesto (NBA) y en la liga nacional de hockey (NHL) en Estados Unidos. \\

El Traveling Tournament Problem (TTP) fue propuesto por \cite{RSGD:1} es un problema típico de calendarización de ligas deportivas 
que se resume en las características más destacadas de la Major League Baseball (MLB) en los Estados Unidos y se creó para estimular la 
investigación en la calendarización de las ligas deportivas. El problema consiste en minimizar la distancia total recorrida por todos los equipos. \\

Como se vió anteriormente, existen torneos en los que el número de rondas disponibles es mayor que el número de rondas necesarios. Es por ésta razón que \cite{RSGD:3} proponen
una nueva versión del TTP llamada Time Relaxed Tournament Problem, en ésta versión los equipos tienen rondas libres entre los juegos, éste número de rondas libres es controlado por un parámetro $K$, para el 
caso particular $K = 0$ corresponde al problema TTP. \\

En el presente trabajo, definiré lo que es TTP, para luego introducir la variante TRTTP que es la que me centraré en resolver. Definiré de maneras mas detallada el TRTTP y 
veré los mejores resultados conocidos a la fecha en la literatura.


\section{Definición del Problema}
%Explicación del problema que se va a estudiar, en que consiste, cuales son sus variables, restricciones y objetivos de manera general. Variantes más conocidas que existen.
\subsection{Traveling Tournament Problem (TTP)}
Dado $n$ equipos, un \emph{torneo doble round robin} es un conjunto de juegos en el cuál cada equipo debe jugar con los $n-1$ equipos restantes sólo una vez como local y una como visita. \\

Un juego es especificado por un par ordenado de los oponentes. Exactamente $2(n-1)$ rondas son requeridas para jugar un \emph{torneo doble round robin}, ya que deben jugar 
como visita y como local contra los $n-1$ equipos restantes ($2(n-1)$). Las distancias entre los lugares de los equipos viene dada por una matriz de distancia $D$ de orden $nxn$. El costo de una 
programación para un equipo es la distancia total que éste debe viajar para jugar con los $n-1$ oponentes como visita y como local, para finalmente volver a su lugar inicial (casa).  \\

Juegos consecutivos como visita para un equipo constituyen un \emph{road trip}, juegos consecutivos constituyen un \emph{home stand}. La longitud de un \emph{road trip} o de un \emph{home stand} 
es el número de oponentes jugados (no la distancia viajada). \\

El problema consiste en minimizar la distancia total recorrida por todos los equipos, sujeto a algunas restricciones.

\subsubsection{Definición}

El \emph{TTP} se define de la siguiente forma: \\

\textbf{Input:} 
\begin{itemize}
 \item 	$n$ : número de equipos.
  \item $D$ : matriz simétrica de orden $nxn$ que contiene las distancias.
  \item $L$, $U$ : parámetros enteros.
\end{itemize}

\textbf{Output:}\\
Un \emph{torneo doble round robin} con $n$ equipos en donde:
\begin{itemize}
 \item La longitud de cada \emph{home stand} y \emph{road trip} están en el rango $[L,U]$.
 \item La distancia total viajada por cada equipo es minimizada.   
\end{itemize}

  Los parámetros $L$ y $U$ definen el equilibrio entre las consideraciones de distancia y de patrón. Para $L = 1$
 y $U = n-1$, un equipo puede tener un viaje equivalente a una gira (muchos viajes). Para pequeños $U$, los equipos 
deben volver a casa seguido, por lo que la distancia recorrida se incrementará. \\

Además de las restricciones principales (duras), el programa debe tener dos restricciones adicionales:
\begin{enumerate}
 \item \emph{Mirrored:} a programación del \emph{torneo doble round robin} debe tener los primeros $n - 1$ juegos 
en el mismo orden con los $n - 1$ juegos restantes, pero invirtiendo los roles de local y visitante.
 \item \emph{No Repeaters:} Una programación no pude tener dos juegos consecutivos entre los mismos equipos.
\end{enumerate}

Con éstas últimas dos restricciones me refiero a dos variantes del TTP, con la primera a \emph{TTP / Mirrored} y con la 
segunda al \emph{TTP / No repeat}. \\


\subsection{Time Relaxed Traveling Tournament Problem (TRTTP)}

Time Relaxed Traveling Tournament Problem es una variante del ya explicado TTP y es propuesto por \cite{RSGD:2}. \\

Las distancias viajadas son una preocupación importante en los problemas de programación de torneos. Cada equipo quiere
minimizar lo mas que se pueda las distancias que éstos recorren. Viajes de grandes distancias tienen resultados no deseados,
tales como fatiga en los jugadores, costos altos de transporte, etc. \\

El organismo administrativo del torneo debe asegurarse que la distancia de viaje sea justa para todos los equipos, ademas de minimizarlas.\\

%En este problema es introducido un factor en la distancia de viaje.

\subsubsection{Definición}

El \emph{TRTTP} se define de la siguiente forma: \\

\textbf{Input:}
\begin{itemize} 
    \item $n$ : número de equipos. 
  \item $D$ : matriz simétrica de orden $nxn$ que contiene las distancias.
  \item$L$, $U$, $B$, $O$ : parámetros enteros.
\end{itemize}


\textbf{Output:} \\
Un \emph{torneo doble round robin} con $n$ equipos en donde:
\begin{itemize}
 \item La longitud de cada \emph{home stand} y \emph{road trip} están en el rango $[L,U]$.
 \item El número de juegos consecutivos sin días libres es menor que $B$. 
 \item El número de días libres consecutivos son menores que $O$
 \item El número total de rondas es $4(n-1)$
\item La distancia total viajada por cada equipo es minimizada.   
\end{itemize}

Cabe destacar que en esta variante se agregan tres nuevas restricciones. Si un equipo juega en dos días consecutivos, tiene 
desventaja en el segundo juego. Normalmente los equipos quieren evitar tal situación, es por esto que es introducido el nuevo parámetro $B$ 
descrito anteriorente. Análogamente, se ha restringido el número de días libres consecutivos. La tercera nueva restricción
es el número total de rondas. Se define el total de rondas al doble de el número de juegos que debe realizar cada equipo, porque cada equipo debe 
jugar $2(n - 1)$ juegos en un \emph{torneo doble round robin}, por lo tanto el total de rondas disponibles asciende a $4(n-1)$.


\section{Estado del Arte}
%Lo más importante que se ha hecho hasta ahora con relación al problema. Debería responder preguntas como las siguientes ¿Cuando surge?, ¿qué métodos se han usado para resolverlo?, 
%¿cuáles son los mejores algoritmos que se han creado hasta la fecha?, ¿qué representaciones han tenido los mejores resultados?, tipos de movimientos, heurísticas, métodos completos, tendencias, etc... 
%Puede incluir gráficos comparativos, o explicativos.

Exiten dos clases de problemas de programación deportiva en la literatura. La primera clase minimiza el número de días libres y es aplicado 
a las ligas Europeas, porque cada equipo vuelve a su casa después de cada partido como visita. \cite{RSGD:4} y \cite{RSGD:5} \cite{RSGD:6} discuten
las aplicaciones de la teoría de grafos y sus métodos para resolverlo. \\

La segunda clase, minimiza la distancia viajada por los equipos y es aplicado a las ligas Americanas. \cite{RSGD:7} consideran
el problema como una programación de una liga de basketball. Para resolver el problema ellos usaron un enfoce de dos fases. \cite{RSGD:8} consideran
un problema similiar para programar la liga NBA. Ellos construyen un modelo de programación entera que fue muy largo para resolver por algoritmos 
exactos. En su lugar, se aplicó una versión revisada del método de dos fases de \cite{RSGD:7}. \cite{RSGD:9} estudiaron
el problema de programación para la liga de hokey (NHL) que fue dividido en dos conferencias. \\

\cite{RSGD:10} fue el primer investigador quien aplicó una solución por métodos metaheurísticos para resolver problemas de programacion de ligas
deportivas el cual pretendía minimizar la distancia recorrida por los equipos. El programó el NHL con una combinación de \emph{Tabú Search} \cite{RSGD:11} y 
\emph{Algoritmos Genéticos}. Además, \cite{RSGD:13} presenta Simulated Annealing \cite{RSGD:12} para resolver la programación de la liga nacional de basketball de Nueva Zelanda. \\

\cite{RSGD:1} introducen el problema Traveling Tournament Problem (TTP) motivados por la liga major de baseball (MLB). La 
solución del problema debe satisfacer restricciones de difícil viabilidad, como además minimizar la distancia recorrida por los equipos. \\

Algunos métodos han sido ofrecidos para resolver el TTP. \cite{RSGD:1} introdujo un algoritmo basado en un límite inferior \emph{(lower bound)}, la cuál
es la suma de la distancia mínima viajada por cada equipo. \cite{RSGD:15} usa una combinación entre la Relajación de Lagrange y Programación con Restricciones.
Luego \cite{RSGD:14} presenta un algoritmo híbrido IP/CP (Programación entera/Programación con restricciones). Además, \cite{RSGD:16}, desarrollaron
un algoritmo \emph{Simulated Annealing}, ellos separaron las restricciones en restricciones duras y restricciones blandas. \\
\cite{RSGD:17} para complementar el modelo de programación entera para el TTP con restricciones de \emph{no-repeater}, introduce un algoritmo \emph{Tabu Search} para resolver
ese problema. \cite{RSGD:18} propone la hibridación de búsqueda por vecindarios largos y programación con restricciones. \cite{RSGD:19} consideran una
clase específia del TTP y demuestran que este caso corresponde a maximizar el número de días libres. \cite{RSGD:20} propone un híbrido \emph{SA-Hill} que combina
los métodos \emph{Simulated Annealing} y \emph{Hill Climbing}. \\

Para instancias más grandes, los métodos con mejores resultados son los basados en metaheurísticas con post-procesamiento de búsqueda local \cite{RSGD:16}, \cite{RSGD:21}, \cite{RSGD:22}, \cite{RSGD:23}.


 
\subsection{Mejores resultados en la literatura}

Luego de hacer una revisión de lo que se ha investigado hasta ahora, haré una tabla comparativa con los mejores resultados conocidos hasta ahora con algunas instancias \cite{RSGD:3} \cite{RSGD:1} de los algoritmos para cada uno de los 
problemas (TTP y TRTTP).

\subsubsection{TTP}
\begin{tabular}{ | l | l | l | l | l | l |}
\hline
\textbf{Paper}  & \textbf{NL8} &  \textbf{NL10} & \textbf{NL12} & \textbf{NL14} & \textbf{NL16}\\ \hline
\cite{RSGD:22} 	&	 - 	&	-	& 110729	& 188728	 &	261687	 \\ \hline
\cite{RSGD:16}	& 39721		& 59583		& 111248	& 188728	& 	263772 	\\ \hline
\cite{RSGD:21}	& 	-	& 59583		& 111483	& 190174	& 	270063 	\\ \hline
\cite{RSGD:20}	& 39721		& 59821		& 115089	& 196363	& 	274673 	\\ \hline
\textbf{Mejor conocido}	& \textbf{39721}	& \textbf{59436} & \textbf{110729} & \textbf{188728} & 	\textbf{261687} \\ \hline
\end{tabular}

\subsubsection{TRTTP}
\begin{tabular}{ | l | l | l |}
\hline
Bao and Trick, August, 2010	& \textbf{NL4}  \\ \hline
$ K = 1$			& 8160 		\\ \hline
$ K = 2$			& 8160 		\\ \hline
$ K = 3$			& 8044 		\\ \hline
\end{tabular}
\begin{tabular}{ | l | l | l | l |}
\hline
Brandão, October, 2010	& \textbf{NL6}	& \textbf{NL8}  \\ \hline
$K = 1$			& 23791 	& 39128		\\ \hline
$K = 2$			& 	-	& 38761		\\ \hline
$K \geq 2$		& 22557 	&	-	\\ \hline
$K \geq 3$		& 	-	& 38670		\\ \hline
\end{tabular}



\section{Modelo Matemático}
%Uno o más modelos matemáticos para el problema, idealmente indicando el espacio de búsqueda para cada uno.
%Antes de proponer un modelo matemático analizaré la complejidad de TTP y luego la complejidad de TRTTP. \\

%En casos extremos, como por ejemplo cuando $U = L = 1$, en TTP la solución óptima es una constante. Cuando $U = 2$, un algoritmo polinomial puede encontrar la solución.
%Cuando $U = n-1$, esto es un \emph{traveling salesman problem} TSP (problema del vendedor viajero), el cual ha sido probado ser un problema NP-completo. En realidad, 
%la anología con el TSP se mantiene en muchos casos. El \emph{torneo round robin} es similar al problema de múltiples vendedores viajeros, hasta cierto punto, pero es más 
%díficil debido a la restricción de un factor. La complejidad del TTP cuando $3 \leq L,U \leq n$ sigue abierta. \cite{RSGD:1} demuestra que TTP es un problema
%NP-duro, excepto en algunos casos extremos. \\

%Similarmente, podemos obtener la complejidad del TRTTP cuando los parámetros toman valores extremos. Si $U = 1$, cada equipo  

\subsection{Representación}
El siguiente modelo fue inspirado en el desarrollado por \cite{RSGD:16} para resolver el TTP. \\

Dado un conjunto $T = \{T_1, T_2, \dots, T_n\}$ de $n$ equipos, un conjunto $R = \{R_1, R_2, \dots, R_m\}$ de $m$ rondas y $k$ rondas libres. En una programación
de un \emph{torneo round robin} definimos la representación de la matriz MT (Matriz de torneo) como $n\times(m + k)$, donde el valor de cada elemento $|a{ij}|$ indica 
el oponente del equipo $T_i$ en una ronda $R_j$.
\begin{itemize}
 \item $|a_{ij}| \in \{0,\dots,N\}$ con $|a_{ij}| \neq i$
 \item $a_{ij} > 0$, cuando el equipo $T_i$ juega de local.
 \item $a_{ij} < 0$, cuando el equipo $T_i$ juega de visita.
 \item $a_{ij} = 0$, cuando el equipo $T_i$ no juega.
\end{itemize}

En la siguiente tabla se muestra una instancia para NL6 con la representación descrita anteriormente. \\

\includegraphics[scale=0.7]{tabla.png}
%hacer tabla a mano

La programación muestra que el equipo 1 ($T_1$) juega contra: $T_6$ como local, $T_2$ como visita, $T_4$ como local, $T_3$ como local, $T_5$ como visita, $T_4$ como visita, 
$T_3$ como visita,$T_5$ como local, $T_2$ como local y $T_6$ como visita, por lo que la distancia total recorrida para el $T_1$ es: \\

$d_{12} +  d_{21} + d_{15} + d_{54} + d_{43} + d_{31} + d_{16} + d_{61}$

\subsection{Restricciones}
Para manejar las restricciones las he dividido en dos tipos: \emph{restricciones duras} y \emph{restricciones blandas}. Las restricciones duras se definen como las restricciones del TTP, luego las restricciones
blandas se definen como las restricciones que se añaden al TTP en el TRTTP.
\subsubsection{Restricciones Duras}
\begin{itemize}
 \item La longitud de cada \emph{home stand} y \emph{road trip} están en el rango $[L,U]$.
 \item Cada equipo debe jugar con los restantes equipos dos veces, una vez en calidad de local y la otra en calidad de visita.
\end{itemize}
\subsubsection{Restricciones Blandas}
\begin{itemize}
 \item El número de juegos consecutivos sin días libres es menor que $B$.
 \item El número de días libres consecutivos son menores que $O$
 \item El número total de rondas es $2(n - 1) + k$
\end{itemize}

Si bien, el modelo presentado por \cite{RSGD:2} utiliza como número total de rondas igual a $4(n - 1)$, en este trabajo se utilizará como $2(n - 1) + k$, ya que cada equipo debe jugar con los $n - 1$ equipos restantes dos veces,
una como local y la otra como visita, además en el TRTTP se agregan $k$ rondas libre, es por eso que se le suma $k$.


\subsection{Función Objetivo y Fitness}
\subsubsection{Función Objetivo}
El objetivo del problema es minimizar la distancia total recorrida por los equipos, respetando las restricciones duras mencionadas anteriormente.
\subsubsection{Funcion Fitness \emph{F}}
Con el fin de manejar las restricciones blandas, se introduce una función \emph{fitness}, para penalizar el incumplimiento de alguna restricción agregándole por cada vez que se viole un peso o costo $\delta_i$ asociado a la 
restricción blanda $i$. Dichos pesos serán definidos por importancia de las restricciones, a mayor importancia, mayor peso. \\

La \emph{Función Fitness} queda definida de la siguiente manera:\\

Sea $v_i$ el número de veces que la restricción $i$ es violada $\forall{i} \in [1,3]$ y $\phi_j$ la distancia total recorrida por el equipo $j$

\begin{equation}
F = \sum_{i=1}^{3} {v_l \times \delta_i} + \sum_{j=1}^{n} {\phi_j}
\end{equation}

El objetivo es minimizar la \emph{función fitness} $F$.


\section{Conclusiones}
%Conclusiones revelantes del estudio realizado.
El Tournament Traveling Problem es un problema muy importante a nivel mundial, ya que hace que las ligas deportivas ahorren mucho dinero y además disminuyen la fatiga
de los jugadores, por lo que las hace más atractivas para los espectadores. También fomenta la investigación en la programación de ligas deportivas. \\

El Time Relaxed Traveling Tournament Problem es una variante del TTP que agrega un número definido de rondas libres, por lo que éste tipo de problema se puede aplicar a todas 
las ligas deportivas de Estados Unidos, a diferencia del TTP que se pude aplicar sólo a algunas. \\

Existe otro tipo de problema de programación deportiva que minimiza el número de días libres, que es aplicado a las ligas deportivas europeas, por lo que si la investigación de estos 
tipos de problemas se podrían mejorar todas las ligas deportivas a nivel mundial. \\

Los mejores resultados conocidos en la literatura son los que utilizan métodos con post-procesamiento en la búsqueda local (movimientos) y usan métodos incompletos para 
resolverlo, como \emph{Tabu Search}, \emph{Hill Climbing} y \emph{Simulated Annealing} o una combinación de éstos.





%REFERENCIAS
%Indicando toda la información necesaria como para poder conseguir las referencias.
\bibliographystyle{apalike}

\bibliography{bibliografia}


\end{document} 